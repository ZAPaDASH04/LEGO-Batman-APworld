from typing import NamedTuple, Optional, Dict

from BaseClasses import Item, ItemClassification
from .Names import ItemName
from .Options import LB1Options

base_item_id: int = 400000


class LB1Item(Item):
    game: str = "Lego Batman: The Video Game"


class LB1ItemData(NamedTuple):
    code: Optional[int] = None
    classification: ItemClassification = ItemClassification.progression_deprioritized_skip_balancing


character_item_table: Dict[str, LB1ItemData] = {
    ItemName.batman_unlocked: LB1ItemData(base_item_id + 0, ItemClassification.progression),
    ItemName.robin_unlocked: LB1ItemData(base_item_id + 1, ItemClassification.progression),
    ItemName.brucewayne_unlocked: LB1ItemData(base_item_id + 2, ItemClassification.filler),
    ItemName.alfred_unlocked: LB1ItemData(base_item_id + 3, ItemClassification.filler),
    ItemName.batgirl_unlocked: LB1ItemData(base_item_id + 4, ItemClassification.progression),
    ItemName.nightwing_unlocked: LB1ItemData(base_item_id + 5, ItemClassification.progression),
    ItemName.commissionergordon_unlocked: LB1ItemData(base_item_id + 6, ItemClassification.progression),
    ItemName.policeofficer_unlocked: LB1ItemData(base_item_id + 7, ItemClassification.filler),
    ItemName.fishmonger_unlocked: LB1ItemData(base_item_id + 8, ItemClassification.filler),
    ItemName.militarypoliceman_unlocked: LB1ItemData(base_item_id + 9, ItemClassification.filler),
    ItemName.securityguard_unlocked: LB1ItemData(base_item_id + 10, ItemClassification.filler),
    ItemName.swat_unlocked: LB1ItemData(base_item_id + 11, ItemClassification.filler),
    ItemName.scientist_unlocked: LB1ItemData(base_item_id + 12, ItemClassification.filler),
    ItemName.sailor_unlocked: LB1ItemData(base_item_id + 13, ItemClassification.filler),
    ItemName.policemarksman_unlocked: LB1ItemData(base_item_id + 14, ItemClassification.filler),
    ItemName.clayface_unlocked: LB1ItemData(base_item_id + 15, ItemClassification.progression),
    ItemName.mrfreeze_unlocked: LB1ItemData(base_item_id + 16, ItemClassification.progression),
    ItemName.poisonivy_unlocked: LB1ItemData(base_item_id + 17, ItemClassification.progression),
    ItemName.twoface_unlocked: LB1ItemData(base_item_id + 18, ItemClassification.progression),
    ItemName.riddler_unlocked: LB1ItemData(base_item_id + 19, ItemClassification.progression),
    ItemName.bane_unlocked: LB1ItemData(base_item_id + 20, ItemClassification.progression),
    ItemName.catwoman_unlocked: LB1ItemData(base_item_id + 21, ItemClassification.progression),
    ItemName.catwomanclassic_unlocked: LB1ItemData(base_item_id + 22, ItemClassification.filler),
    ItemName.killercroc_unlocked: LB1ItemData(base_item_id + 23, ItemClassification.progression),
    ItemName.manbat_unlocked: LB1ItemData(base_item_id + 24, ItemClassification.progression),
    ItemName.penguin_unlocked: LB1ItemData(base_item_id + 25, ItemClassification.progression),
    ItemName.harleyquinn_unlocked: LB1ItemData(base_item_id + 26, ItemClassification.progression),
    ItemName.scarecrow_unlocked: LB1ItemData(base_item_id + 27, ItemClassification.progression),
    ItemName.killermoth_unlocked: LB1ItemData(base_item_id + 28, ItemClassification.progression),
    ItemName.madhatter_unlocked: LB1ItemData(base_item_id + 29, ItemClassification.progression),
    ItemName.joker_unlocked: LB1ItemData(base_item_id + 30, ItemClassification.progression),
    ItemName.jokertropical_unlocked: LB1ItemData(base_item_id + 31, ItemClassification.filler),
    ItemName.poisonivygoon_unlocked: LB1ItemData(base_item_id + 32, ItemClassification.filler),
    ItemName.zoosweeper_unlocked: LB1ItemData(base_item_id + 33, ItemClassification.filler),
    ItemName.freezegirl_unlocked: LB1ItemData(base_item_id + 34, ItemClassification.filler),
    ItemName.yeti_unlocked: LB1ItemData(base_item_id + 35, ItemClassification.filler),
    ItemName.riddlergoon_unlocked: LB1ItemData(base_item_id + 36, ItemClassification.filler),
    ItemName.riddlerhenchman_unlocked: LB1ItemData(base_item_id + 37, ItemClassification.filler),
    ItemName.penguingoons_unlocked: LB1ItemData(base_item_id + 38, ItemClassification.filler),
    ItemName.penguinhenchman_unlocked: LB1ItemData(base_item_id + 39, ItemClassification.filler),
    ItemName.penguinminion_unlocked: LB1ItemData(base_item_id + 40, ItemClassification.filler),
    ItemName.jokergoon_unlocked: LB1ItemData(base_item_id + 41, ItemClassification.filler),
    ItemName.jokerhenchman_unlocked: LB1ItemData(base_item_id + 42, ItemClassification.filler),
    ItemName.clowngoon_unlocked: LB1ItemData(base_item_id + 43, ItemClassification.filler),
}

hard_character_item_table: Dict[str, LB1ItemData] = {
    ItemName.hush_unlocked: LB1ItemData(base_item_id + 44, ItemClassification.progression),
    ItemName.rasalghul_unlocked: LB1ItemData(base_item_id + 45, ItemClassification.progression),
    # "Hero 1 Unlocked": LB1ItemData(base_item_id + 46, ItemClassification.filler),
    # "Hero 2 Unlocked": LB1ItemData(base_item_id + 47, ItemClassification.filler),
}

automobile_item_table: Dict[str, LB1ItemData] = {
    ItemName.batmobile_unlocked: LB1ItemData(base_item_id + 48, ItemClassification.progression),
    ItemName.batcycle_unlocked: LB1ItemData(base_item_id + 49, ItemClassification.progression),
    ItemName.policecar_unlocked: LB1ItemData(base_item_id + 50, ItemClassification.progression),
    ItemName.policebike_unlocked: LB1ItemData(base_item_id + 51, ItemClassification.progression),
    ItemName.policevan_unlocked: LB1ItemData(base_item_id + 52, ItemClassification.progression),
    ItemName.battank_unlocked: LB1ItemData(base_item_id + 53, ItemClassification.progression),
    ItemName.catmotorcycle_unlocked: LB1ItemData(base_item_id + 54, ItemClassification.progression),
    ItemName.armouredtruck_unlocked: LB1ItemData(base_item_id + 55, ItemClassification.progression),
    ItemName.freezekart_unlocked: LB1ItemData(base_item_id + 56, ItemClassification.progression),
    ItemName.hammertruck_unlocked: LB1ItemData(base_item_id + 57, ItemClassification.progression),
    ItemName.jokervan_unlocked: LB1ItemData(base_item_id + 58, ItemClassification.progression),
    ItemName.garbagetruck_unlocked: LB1ItemData(base_item_id + 59, ItemClassification.progression),
}

watercraft_item_table: Dict[str, LB1ItemData] = {
    ItemName.batboat_unlocked: LB1ItemData(base_item_id + 60, ItemClassification.progression),
    ItemName.robinswatercraft_unlocked: LB1ItemData(base_item_id + 61, ItemClassification.progression),
    ItemName.robinssubmarine_unlocked: LB1ItemData(base_item_id + 62, ItemClassification.progression),
    ItemName.policewatercraft_unlocked: LB1ItemData(base_item_id + 63, ItemClassification.progression),
    ItemName.policeboat_unlocked: LB1ItemData(base_item_id + 64, ItemClassification.progression),
    ItemName.penguinsubmarine_unlocked: LB1ItemData(base_item_id + 65, ItemClassification.progression),
    ItemName.swamprider_unlocked: LB1ItemData(base_item_id + 66, ItemClassification.progression),
    ItemName.penguingoonsub_unlocked: LB1ItemData(base_item_id + 67, ItemClassification.progression),
    ItemName.iceberg_unlocked: LB1ItemData(base_item_id + 68, ItemClassification.progression),
    ItemName.steamboat_unlocked: LB1ItemData(base_item_id + 69, ItemClassification.progression),
}

aircraft_item_table: Dict[str, LB1ItemData] = {
    ItemName.batwing_unlocked: LB1ItemData(base_item_id + 70, ItemClassification.progression),
    ItemName.batcopter_unlocked: LB1ItemData(base_item_id + 71, ItemClassification.progression),
    ItemName.harbourhelicopter_unlocked: LB1ItemData(base_item_id + 72, ItemClassification.progression),
    ItemName.policehelicopter_unlocked: LB1ItemData(base_item_id + 73, ItemClassification.progression),
    ItemName.privatejet_unlocked: LB1ItemData(base_item_id + 74, ItemClassification.progression),
    ItemName.jokerhelicopter_unlocked: LB1ItemData(base_item_id + 75, ItemClassification.progression),
    ItemName.scarecrowbiplane_unlocked: LB1ItemData(base_item_id + 76, ItemClassification.progression),
    ItemName.goonhelicopter_unlocked: LB1ItemData(base_item_id + 77, ItemClassification.progression),
    ItemName.riddlerjet_unlocked: LB1ItemData(base_item_id + 78, ItemClassification.progression),
    ItemName.glider_unlocked: LB1ItemData(base_item_id + 79, ItemClassification.progression),
}

# Currently stored in Batcave because it is sounding like they can be unlocked in multiple levels
suit_item_table: Dict[str, LB1ItemData] = {
    # "Batsuit": LB1ItemData(base_item_id + 80, ItemClassification.progression),
    ItemName.heatprotectsuit: LB1ItemData(base_item_id + 81, ItemClassification.progression),
    ItemName.glidesuit: LB1ItemData(base_item_id + 82, ItemClassification.progression),
    ItemName.demolitionsuit: LB1ItemData(base_item_id + 83, ItemClassification.progression),
    ItemName.sonicsuit: LB1ItemData(base_item_id + 84, ItemClassification.progression),
    # "Robinsuit": LB1ItemData(base_item_id + 85, ItemClassification.progression),
    ItemName.watersuit: LB1ItemData(base_item_id + 86, ItemClassification.progression),
    ItemName.techsuit: LB1ItemData(base_item_id + 87, ItemClassification.progression),
    ItemName.magsuit: LB1ItemData(base_item_id + 88, ItemClassification.progression),
    ItemName.attractsuit: LB1ItemData(base_item_id + 89, ItemClassification.progression),
}

# TODO: add in progression classification based off of win con
minikit_item_table: Dict[str, LB1ItemData] = {
    ItemName.ycbob_min1: LB1ItemData(base_item_id + 100),
    ItemName.ycbob_min2: LB1ItemData(base_item_id + 101),
    ItemName.ycbob_min3: LB1ItemData(base_item_id + 102),
    ItemName.ycbob_min4: LB1ItemData(base_item_id + 103),
    ItemName.ycbob_min5: LB1ItemData(base_item_id + 104),
    ItemName.ycbob_min6: LB1ItemData(base_item_id + 105),
    ItemName.ycbob_min7: LB1ItemData(base_item_id + 106),
    ItemName.ycbob_min8: LB1ItemData(base_item_id + 107),
    ItemName.ycbob_min9: LB1ItemData(base_item_id + 108),
    ItemName.ycbob_min10: LB1ItemData(base_item_id + 109),

    ItemName.air_min1: LB1ItemData(base_item_id + 110),
    ItemName.air_min2: LB1ItemData(base_item_id + 111),
    ItemName.air_min3: LB1ItemData(base_item_id + 112),
    ItemName.air_min4: LB1ItemData(base_item_id + 113),
    ItemName.air_min5: LB1ItemData(base_item_id + 114),
    ItemName.air_min6: LB1ItemData(base_item_id + 115),
    ItemName.air_min7: LB1ItemData(base_item_id + 116),
    ItemName.air_min8: LB1ItemData(base_item_id + 117),
    ItemName.air_min9: LB1ItemData(base_item_id + 118),
    ItemName.air_min10: LB1ItemData(base_item_id + 119),

    ItemName.tfc_min1: LB1ItemData(base_item_id + 120),
    ItemName.tfc_min2: LB1ItemData(base_item_id + 121),
    ItemName.tfc_min3: LB1ItemData(base_item_id + 122),
    ItemName.tfc_min4: LB1ItemData(base_item_id + 123),
    ItemName.tfc_min5: LB1ItemData(base_item_id + 124),
    ItemName.tfc_min6: LB1ItemData(base_item_id + 125),
    ItemName.tfc_min7: LB1ItemData(base_item_id + 126),
    ItemName.tfc_min8: LB1ItemData(base_item_id + 127),
    ItemName.tfc_min9: LB1ItemData(base_item_id + 128),
    ItemName.tfc_min10: LB1ItemData(base_item_id + 129),

    ItemName.apa_min1: LB1ItemData(base_item_id + 130),
    ItemName.apa_min2: LB1ItemData(base_item_id + 131),
    ItemName.apa_min3: LB1ItemData(base_item_id + 132),
    ItemName.apa_min4: LB1ItemData(base_item_id + 133),
    ItemName.apa_min5: LB1ItemData(base_item_id + 134),
    ItemName.apa_min6: LB1ItemData(base_item_id + 135),
    ItemName.apa_min7: LB1ItemData(base_item_id + 136),
    ItemName.apa_min8: LB1ItemData(base_item_id + 137),
    ItemName.apa_min9: LB1ItemData(base_item_id + 138),
    ItemName.apa_min10: LB1ItemData(base_item_id + 139),

    ItemName.tfo_min1: LB1ItemData(base_item_id + 140),
    ItemName.tfo_min2: LB1ItemData(base_item_id + 141),
    ItemName.tfo_min3: LB1ItemData(base_item_id + 142),
    ItemName.tfo_min4: LB1ItemData(base_item_id + 143),
    ItemName.tfo_min5: LB1ItemData(base_item_id + 144),
    ItemName.tfo_min6: LB1ItemData(base_item_id + 145),
    ItemName.tfo_min7: LB1ItemData(base_item_id + 146),
    ItemName.tfo_min8: LB1ItemData(base_item_id + 147),
    ItemName.tfo_min9: LB1ItemData(base_item_id + 148),
    ItemName.tfo_min10: LB1ItemData(base_item_id + 149),

    ItemName.tsga_min1: LB1ItemData(base_item_id + 150),
    ItemName.tsga_min2: LB1ItemData(base_item_id + 151),
    ItemName.tsga_min3: LB1ItemData(base_item_id + 152),
    ItemName.tsga_min4: LB1ItemData(base_item_id + 153),
    ItemName.tsga_min5: LB1ItemData(base_item_id + 154),
    ItemName.tsga_min6: LB1ItemData(base_item_id + 155),
    ItemName.tsga_min7: LB1ItemData(base_item_id + 156),
    ItemName.tsga_min8: LB1ItemData(base_item_id + 157),
    ItemName.tsga_min9: LB1ItemData(base_item_id + 158),
    ItemName.tsga_min10: LB1ItemData(base_item_id + 159),

    ItemName.bbb_min1: LB1ItemData(base_item_id + 160),
    ItemName.bbb_min2: LB1ItemData(base_item_id + 161),
    ItemName.bbb_min3: LB1ItemData(base_item_id + 162),
    ItemName.bbb_min4: LB1ItemData(base_item_id + 163),
    ItemName.bbb_min5: LB1ItemData(base_item_id + 164),
    ItemName.bbb_min6: LB1ItemData(base_item_id + 165),
    ItemName.bbb_min7: LB1ItemData(base_item_id + 166),
    ItemName.bbb_min8: LB1ItemData(base_item_id + 167),
    ItemName.bbb_min9: LB1ItemData(base_item_id + 168),
    ItemName.bbb_min10: LB1ItemData(base_item_id + 169),

    ItemName.utc_min1: LB1ItemData(base_item_id + 170),
    ItemName.utc_min2: LB1ItemData(base_item_id + 171),
    ItemName.utc_min3: LB1ItemData(base_item_id + 172),
    ItemName.utc_min4: LB1ItemData(base_item_id + 173),
    ItemName.utc_min5: LB1ItemData(base_item_id + 174),
    ItemName.utc_min6: LB1ItemData(base_item_id + 175),
    ItemName.utc_min7: LB1ItemData(base_item_id + 176),
    ItemName.utc_min8: LB1ItemData(base_item_id + 177),
    ItemName.utc_min9: LB1ItemData(base_item_id + 178),
    ItemName.utc_min10: LB1ItemData(base_item_id + 179),

    ItemName.zc_min1: LB1ItemData(base_item_id + 180),
    ItemName.zc_min2: LB1ItemData(base_item_id + 181),
    ItemName.zc_min3: LB1ItemData(base_item_id + 182),
    ItemName.zc_min4: LB1ItemData(base_item_id + 183),
    ItemName.zc_min5: LB1ItemData(base_item_id + 184),
    ItemName.zc_min6: LB1ItemData(base_item_id + 185),
    ItemName.zc_min7: LB1ItemData(base_item_id + 186),
    ItemName.zc_min8: LB1ItemData(base_item_id + 187),
    ItemName.zc_min9: LB1ItemData(base_item_id + 188),
    ItemName.zc_min10: LB1ItemData(base_item_id + 189),

    ItemName.pl_min1: LB1ItemData(base_item_id + 190),
    ItemName.pl_min2: LB1ItemData(base_item_id + 191),
    ItemName.pl_min3: LB1ItemData(base_item_id + 192),
    ItemName.pl_min4: LB1ItemData(base_item_id + 193),
    ItemName.pl_min5: LB1ItemData(base_item_id + 194),
    ItemName.pl_min6: LB1ItemData(base_item_id + 195),
    ItemName.pl_min7: LB1ItemData(base_item_id + 196),
    ItemName.pl_min8: LB1ItemData(base_item_id + 197),
    ItemName.pl_min9: LB1ItemData(base_item_id + 198),
    ItemName.pl_min10: LB1ItemData(base_item_id + 199),

    ItemName.jht_min1: LB1ItemData(base_item_id + 200),
    ItemName.jht_min2: LB1ItemData(base_item_id + 201),
    ItemName.jht_min3: LB1ItemData(base_item_id + 202),
    ItemName.jht_min4: LB1ItemData(base_item_id + 203),
    ItemName.jht_min5: LB1ItemData(base_item_id + 204),
    ItemName.jht_min6: LB1ItemData(base_item_id + 205),
    ItemName.jht_min7: LB1ItemData(base_item_id + 206),
    ItemName.jht_min8: LB1ItemData(base_item_id + 207),
    ItemName.jht_min9: LB1ItemData(base_item_id + 208),
    ItemName.jht_min10: LB1ItemData(base_item_id + 209),

    ItemName.lfabt_min1: LB1ItemData(base_item_id + 210),
    ItemName.lfabt_min2: LB1ItemData(base_item_id + 211),
    ItemName.lfabt_min3: LB1ItemData(base_item_id + 212),
    ItemName.lfabt_min4: LB1ItemData(base_item_id + 213),
    ItemName.lfabt_min5: LB1ItemData(base_item_id + 214),
    ItemName.lfabt_min6: LB1ItemData(base_item_id + 215),
    ItemName.lfabt_min7: LB1ItemData(base_item_id + 216),
    ItemName.lfabt_min8: LB1ItemData(base_item_id + 217),
    ItemName.lfabt_min9: LB1ItemData(base_item_id + 218),
    ItemName.lfabt_min10: LB1ItemData(base_item_id + 219),

    ItemName.fotb_min1: LB1ItemData(base_item_id + 220),
    ItemName.fotb_min2: LB1ItemData(base_item_id + 221),
    ItemName.fotb_min3: LB1ItemData(base_item_id + 222),
    ItemName.fotb_min4: LB1ItemData(base_item_id + 223),
    ItemName.fotb_min5: LB1ItemData(base_item_id + 224),
    ItemName.fotb_min6: LB1ItemData(base_item_id + 225),
    ItemName.fotb_min7: LB1ItemData(base_item_id + 226),
    ItemName.fotb_min8: LB1ItemData(base_item_id + 227),
    ItemName.fotb_min9: LB1ItemData(base_item_id + 228),
    ItemName.fotb_min10: LB1ItemData(base_item_id + 229),

    ItemName.itdn_min1: LB1ItemData(base_item_id + 230),
    ItemName.itdn_min2: LB1ItemData(base_item_id + 231),
    ItemName.itdn_min3: LB1ItemData(base_item_id + 232),
    ItemName.itdn_min4: LB1ItemData(base_item_id + 233),
    ItemName.itdn_min5: LB1ItemData(base_item_id + 234),
    ItemName.itdn_min6: LB1ItemData(base_item_id + 235),
    ItemName.itdn_min7: LB1ItemData(base_item_id + 236),
    ItemName.itdn_min8: LB1ItemData(base_item_id + 237),
    ItemName.itdn_min9: LB1ItemData(base_item_id + 238),
    ItemName.itdn_min10: LB1ItemData(base_item_id + 239),

    ItemName.tttot_min1: LB1ItemData(base_item_id + 240),
    ItemName.tttot_min2: LB1ItemData(base_item_id + 241),
    ItemName.tttot_min3: LB1ItemData(base_item_id + 242),
    ItemName.tttot_min4: LB1ItemData(base_item_id + 243),
    ItemName.tttot_min5: LB1ItemData(base_item_id + 244),
    ItemName.tttot_min6: LB1ItemData(base_item_id + 245),
    ItemName.tttot_min7: LB1ItemData(base_item_id + 246),
    ItemName.tttot_min8: LB1ItemData(base_item_id + 247),
    ItemName.tttot_min9: LB1ItemData(base_item_id + 248),
    ItemName.tttot_min10: LB1ItemData(base_item_id + 249),

    ItemName.trmaw_min1: LB1ItemData(base_item_id + 250),
    ItemName.trmaw_min2: LB1ItemData(base_item_id + 251),
    ItemName.trmaw_min3: LB1ItemData(base_item_id + 252),
    ItemName.trmaw_min4: LB1ItemData(base_item_id + 253),
    ItemName.trmaw_min5: LB1ItemData(base_item_id + 254),
    ItemName.trmaw_min6: LB1ItemData(base_item_id + 255),
    ItemName.trmaw_min7: LB1ItemData(base_item_id + 256),
    ItemName.trmaw_min8: LB1ItemData(base_item_id + 257),
    ItemName.trmaw_min9: LB1ItemData(base_item_id + 258),
    ItemName.trmaw_min10: LB1ItemData(base_item_id + 259),

    ItemName.otr_min1: LB1ItemData(base_item_id + 260),
    ItemName.otr_min2: LB1ItemData(base_item_id + 261),
    ItemName.otr_min3: LB1ItemData(base_item_id + 262),
    ItemName.otr_min4: LB1ItemData(base_item_id + 263),
    ItemName.otr_min5: LB1ItemData(base_item_id + 264),
    ItemName.otr_min6: LB1ItemData(base_item_id + 265),
    ItemName.otr_min7: LB1ItemData(base_item_id + 266),
    ItemName.otr_min8: LB1ItemData(base_item_id + 267),
    ItemName.otr_min9: LB1ItemData(base_item_id + 268),
    ItemName.otr_min10: LB1ItemData(base_item_id + 269),

    ItemName.gf_min1: LB1ItemData(base_item_id + 270),
    ItemName.gf_min2: LB1ItemData(base_item_id + 271),
    ItemName.gf_min3: LB1ItemData(base_item_id + 272),
    ItemName.gf_min4: LB1ItemData(base_item_id + 273),
    ItemName.gf_min5: LB1ItemData(base_item_id + 274),
    ItemName.gf_min6: LB1ItemData(base_item_id + 275),
    ItemName.gf_min7: LB1ItemData(base_item_id + 276),
    ItemName.gf_min8: LB1ItemData(base_item_id + 277),
    ItemName.gf_min9: LB1ItemData(base_item_id + 278),
    ItemName.gf_min10: LB1ItemData(base_item_id + 279),

    ItemName.aet_min1: LB1ItemData(base_item_id + 280),
    ItemName.aet_min2: LB1ItemData(base_item_id + 281),
    ItemName.aet_min3: LB1ItemData(base_item_id + 282),
    ItemName.aet_min4: LB1ItemData(base_item_id + 283),
    ItemName.aet_min5: LB1ItemData(base_item_id + 284),
    ItemName.aet_min6: LB1ItemData(base_item_id + 285),
    ItemName.aet_min7: LB1ItemData(base_item_id + 286),
    ItemName.aet_min8: LB1ItemData(base_item_id + 287),
    ItemName.aet_min9: LB1ItemData(base_item_id + 288),
    ItemName.aet_min10: LB1ItemData(base_item_id + 289),

    ItemName.bb_min1: LB1ItemData(base_item_id + 290),
    ItemName.bb_min2: LB1ItemData(base_item_id + 291),
    ItemName.bb_min3: LB1ItemData(base_item_id + 292),
    ItemName.bb_min4: LB1ItemData(base_item_id + 293),
    ItemName.bb_min5: LB1ItemData(base_item_id + 294),
    ItemName.bb_min6: LB1ItemData(base_item_id + 295),
    ItemName.bb_min7: LB1ItemData(base_item_id + 296),
    ItemName.bb_min8: LB1ItemData(base_item_id + 297),
    ItemName.bb_min9: LB1ItemData(base_item_id + 298),
    ItemName.bb_min10: LB1ItemData(base_item_id + 299),

    ItemName.rtd_min1: LB1ItemData(base_item_id + 300),
    ItemName.rtd_min2: LB1ItemData(base_item_id + 301),
    ItemName.rtd_min3: LB1ItemData(base_item_id + 302),
    ItemName.rtd_min4: LB1ItemData(base_item_id + 303),
    ItemName.rtd_min5: LB1ItemData(base_item_id + 304),
    ItemName.rtd_min6: LB1ItemData(base_item_id + 305),
    ItemName.rtd_min7: LB1ItemData(base_item_id + 306),
    ItemName.rtd_min8: LB1ItemData(base_item_id + 307),
    ItemName.rtd_min9: LB1ItemData(base_item_id + 308),
    ItemName.rtd_min10: LB1ItemData(base_item_id + 309),

    ItemName.sts_min1: LB1ItemData(base_item_id + 310),
    ItemName.sts_min2: LB1ItemData(base_item_id + 311),
    ItemName.sts_min3: LB1ItemData(base_item_id + 312),
    ItemName.sts_min4: LB1ItemData(base_item_id + 313),
    ItemName.sts_min5: LB1ItemData(base_item_id + 314),
    ItemName.sts_min6: LB1ItemData(base_item_id + 315),
    ItemName.sts_min7: LB1ItemData(base_item_id + 316),
    ItemName.sts_min8: LB1ItemData(base_item_id + 317),
    ItemName.sts_min9: LB1ItemData(base_item_id + 318),
    ItemName.sts_min10: LB1ItemData(base_item_id + 319),

    ItemName.hag_min1: LB1ItemData(base_item_id + 320),
    ItemName.hag_min2: LB1ItemData(base_item_id + 321),
    ItemName.hag_min3: LB1ItemData(base_item_id + 322),
    ItemName.hag_min4: LB1ItemData(base_item_id + 323),
    ItemName.hag_min5: LB1ItemData(base_item_id + 324),
    ItemName.hag_min6: LB1ItemData(base_item_id + 325),
    ItemName.hag_min7: LB1ItemData(base_item_id + 326),
    ItemName.hag_min8: LB1ItemData(base_item_id + 327),
    ItemName.hag_min9: LB1ItemData(base_item_id + 328),
    ItemName.hag_min10: LB1ItemData(base_item_id + 329),

    ItemName.adr_min1: LB1ItemData(base_item_id + 330),
    ItemName.adr_min2: LB1ItemData(base_item_id + 331),
    ItemName.adr_min3: LB1ItemData(base_item_id + 332),
    ItemName.adr_min4: LB1ItemData(base_item_id + 333),
    ItemName.adr_min5: LB1ItemData(base_item_id + 334),
    ItemName.adr_min6: LB1ItemData(base_item_id + 335),
    ItemName.adr_min7: LB1ItemData(base_item_id + 336),
    ItemName.adr_min8: LB1ItemData(base_item_id + 337),
    ItemName.adr_min9: LB1ItemData(base_item_id + 338),
    ItemName.adr_min10: LB1ItemData(base_item_id + 339),

    ItemName.aw_min1: LB1ItemData(base_item_id + 340),
    ItemName.aw_min2: LB1ItemData(base_item_id + 341),
    ItemName.aw_min3: LB1ItemData(base_item_id + 342),
    ItemName.aw_min4: LB1ItemData(base_item_id + 343),
    ItemName.aw_min5: LB1ItemData(base_item_id + 344),
    ItemName.aw_min6: LB1ItemData(base_item_id + 345),
    ItemName.aw_min7: LB1ItemData(base_item_id + 346),
    ItemName.aw_min8: LB1ItemData(base_item_id + 347),
    ItemName.aw_min9: LB1ItemData(base_item_id + 348),
    ItemName.aw_min10: LB1ItemData(base_item_id + 349),

    ItemName.asftc_min1: LB1ItemData(base_item_id + 350),
    ItemName.asftc_min2: LB1ItemData(base_item_id + 351),
    ItemName.asftc_min3: LB1ItemData(base_item_id + 352),
    ItemName.asftc_min4: LB1ItemData(base_item_id + 353),
    ItemName.asftc_min5: LB1ItemData(base_item_id + 354),
    ItemName.asftc_min6: LB1ItemData(base_item_id + 355),
    ItemName.asftc_min7: LB1ItemData(base_item_id + 356),
    ItemName.asftc_min8: LB1ItemData(base_item_id + 357),
    ItemName.asftc_min9: LB1ItemData(base_item_id + 358),
    ItemName.asftc_min10: LB1ItemData(base_item_id + 359),

    ItemName.bbpl_min1: LB1ItemData(base_item_id + 360),
    ItemName.bbpl_min2: LB1ItemData(base_item_id + 361),
    ItemName.bbpl_min3: LB1ItemData(base_item_id + 362),
    ItemName.bbpl_min4: LB1ItemData(base_item_id + 363),
    ItemName.bbpl_min5: LB1ItemData(base_item_id + 364),
    ItemName.bbpl_min6: LB1ItemData(base_item_id + 365),
    ItemName.bbpl_min7: LB1ItemData(base_item_id + 366),
    ItemName.bbpl_min8: LB1ItemData(base_item_id + 367),
    ItemName.bbpl_min9: LB1ItemData(base_item_id + 368),
    ItemName.bbpl_min10: LB1ItemData(base_item_id + 369),

    ItemName.tjm_min1: LB1ItemData(base_item_id + 370),
    ItemName.tjm_min2: LB1ItemData(base_item_id + 371),
    ItemName.tjm_min3: LB1ItemData(base_item_id + 372),
    ItemName.tjm_min4: LB1ItemData(base_item_id + 373),
    ItemName.tjm_min5: LB1ItemData(base_item_id + 374),
    ItemName.tjm_min6: LB1ItemData(base_item_id + 375),
    ItemName.tjm_min7: LB1ItemData(base_item_id + 376),
    ItemName.tjm_min8: LB1ItemData(base_item_id + 377),
    ItemName.tjm_min9: LB1ItemData(base_item_id + 378),
    ItemName.tjm_min10: LB1ItemData(base_item_id + 379),

    ItemName.tlotn_min1: LB1ItemData(base_item_id + 380),
    ItemName.tlotn_min2: LB1ItemData(base_item_id + 381),
    ItemName.tlotn_min3: LB1ItemData(base_item_id + 382),
    ItemName.tlotn_min4: LB1ItemData(base_item_id + 383),
    ItemName.tlotn_min5: LB1ItemData(base_item_id + 384),
    ItemName.tlotn_min6: LB1ItemData(base_item_id + 385),
    ItemName.tlotn_min7: LB1ItemData(base_item_id + 386),
    ItemName.tlotn_min8: LB1ItemData(base_item_id + 387),
    ItemName.tlotn_min9: LB1ItemData(base_item_id + 388),
    ItemName.tlotn_min10: LB1ItemData(base_item_id + 389),

    ItemName.dol_min1: LB1ItemData(base_item_id + 390),
    ItemName.dol_min2: LB1ItemData(base_item_id + 391),
    ItemName.dol_min3: LB1ItemData(base_item_id + 392),
    ItemName.dol_min4: LB1ItemData(base_item_id + 393),
    ItemName.dol_min5: LB1ItemData(base_item_id + 394),
    ItemName.dol_min6: LB1ItemData(base_item_id + 395),
    ItemName.dol_min7: LB1ItemData(base_item_id + 396),
    ItemName.dol_min8: LB1ItemData(base_item_id + 397),
    ItemName.dol_min9: LB1ItemData(base_item_id + 398),
    ItemName.dol_min10: LB1ItemData(base_item_id + 399),
}

hostage_item_table: Dict[str, LB1ItemData] = {
    ItemName.ycbob_host: LB1ItemData(base_item_id + 400, ItemClassification.filler),
    ItemName.air_host: LB1ItemData(base_item_id + 401, ItemClassification.filler),
    ItemName.apa_host: LB1ItemData(base_item_id + 402, ItemClassification.filler),
    ItemName.tfo_host: LB1ItemData(base_item_id + 403, ItemClassification.filler),
    ItemName.tsga_host: LB1ItemData(base_item_id + 404, ItemClassification.filler),
    ItemName.utc_host: LB1ItemData(base_item_id + 405, ItemClassification.filler),
    ItemName.zc_host: LB1ItemData(base_item_id + 406, ItemClassification.filler),
    ItemName.pl_host: LB1ItemData(base_item_id + 407, ItemClassification.filler),
    ItemName.jht_host: LB1ItemData(base_item_id + 408, ItemClassification.filler),
    ItemName.lfabt_host: LB1ItemData(base_item_id + 409, ItemClassification.filler),
    ItemName.itdn_host: LB1ItemData(base_item_id + 410, ItemClassification.filler),
    ItemName.tttot_host: LB1ItemData(base_item_id + 411, ItemClassification.filler),
    ItemName.trmaw_host: LB1ItemData(base_item_id + 412, ItemClassification.filler),
    ItemName.otr_host: LB1ItemData(base_item_id + 413, ItemClassification.filler),
    ItemName.gf_host: LB1ItemData(base_item_id + 414, ItemClassification.filler),
    ItemName.aet_host: LB1ItemData(base_item_id + 415, ItemClassification.filler),
    ItemName.bb_host: LB1ItemData(base_item_id + 416, ItemClassification.filler),
    ItemName.rtd_host: LB1ItemData(base_item_id + 417, ItemClassification.filler),
    ItemName.sts_host: LB1ItemData(base_item_id + 418, ItemClassification.filler),
    ItemName.adr_host: LB1ItemData(base_item_id + 419, ItemClassification.filler),
    ItemName.aw_host: LB1ItemData(base_item_id + 420, ItemClassification.filler),
    ItemName.asftc_host: LB1ItemData(base_item_id + 421, ItemClassification.filler),
    ItemName.tjm_host: LB1ItemData(base_item_id + 422, ItemClassification.filler),
    ItemName.tlotn_host: LB1ItemData(base_item_id + 423, ItemClassification.filler),
    ItemName.dol_host: LB1ItemData(base_item_id + 424, ItemClassification.filler),
}

level_unlocked_item_table: Dict[str, LB1ItemData] = {
    ItemName.ycbob_lvl: LB1ItemData(base_item_id + 425, ItemClassification.progression),
    ItemName.air_lvl: LB1ItemData(base_item_id + 426, ItemClassification.progression),
    ItemName.tfc_lvl: LB1ItemData(base_item_id + 427, ItemClassification.progression),
    ItemName.apa_lvl: LB1ItemData(base_item_id + 428, ItemClassification.progression),
    ItemName.tfo_lvl: LB1ItemData(base_item_id + 429, ItemClassification.progression),
    ItemName.tsga_lvl: LB1ItemData(base_item_id + 430, ItemClassification.progression),
    ItemName.bbb_lvl: LB1ItemData(base_item_id + 431, ItemClassification.progression),
    ItemName.utc_lvl: LB1ItemData(base_item_id + 432, ItemClassification.progression),
    ItemName.zc_lvl: LB1ItemData(base_item_id + 433, ItemClassification.progression),
    ItemName.pl_lvl: LB1ItemData(base_item_id + 434, ItemClassification.progression),
    ItemName.jht_lvl: LB1ItemData(base_item_id + 435, ItemClassification.progression),
    ItemName.lfabt_lvl: LB1ItemData(base_item_id + 436, ItemClassification.progression),
    ItemName.fotb_lvl: LB1ItemData(base_item_id + 437, ItemClassification.progression),
    ItemName.itdn_lvl: LB1ItemData(base_item_id + 438, ItemClassification.progression),
    ItemName.tttot_lvl: LB1ItemData(base_item_id + 439, ItemClassification.progression),
    ItemName.trmaw_lvl: LB1ItemData(base_item_id + 440, ItemClassification.progression),
    ItemName.otr_lvl: LB1ItemData(base_item_id + 441, ItemClassification.progression),
    ItemName.gf_lvl: LB1ItemData(base_item_id + 442, ItemClassification.progression),
    ItemName.aet_lvl: LB1ItemData(base_item_id + 443, ItemClassification.progression),
    ItemName.bb_lvl: LB1ItemData(base_item_id + 444, ItemClassification.progression),
    ItemName.rtd_lvl: LB1ItemData(base_item_id + 445, ItemClassification.progression),
    ItemName.sts_lvl: LB1ItemData(base_item_id + 446, ItemClassification.progression),
    ItemName.hag_lvl: LB1ItemData(base_item_id + 447, ItemClassification.progression),
    ItemName.adr_lvl: LB1ItemData(base_item_id + 448, ItemClassification.progression),
    ItemName.aw_lvl: LB1ItemData(base_item_id + 449, ItemClassification.progression),
    ItemName.asftc_lvl: LB1ItemData(base_item_id + 450, ItemClassification.progression),
    ItemName.bbpl_lvl: LB1ItemData(base_item_id + 451, ItemClassification.progression),
    ItemName.tjm_lvl: LB1ItemData(base_item_id + 452, ItemClassification.progression),
    ItemName.tlotn_lvl: LB1ItemData(base_item_id + 453, ItemClassification.progression),
    ItemName.dol_lvl: LB1ItemData(base_item_id + 454, ItemClassification.progression),
}

true_status_item_table: Dict[str, LB1ItemData] = {
    ItemName.ycbob_ts: LB1ItemData(base_item_id + 455, ItemClassification.filler),
    ItemName.air_ts: LB1ItemData(base_item_id + 456, ItemClassification.filler),
    ItemName.tfc_ts: LB1ItemData(base_item_id + 457, ItemClassification.filler),
    ItemName.apa_ts: LB1ItemData(base_item_id + 458, ItemClassification.filler),
    ItemName.tfo_ts: LB1ItemData(base_item_id + 459, ItemClassification.filler),
    ItemName.tsga_ts: LB1ItemData(base_item_id + 460, ItemClassification.filler),
    ItemName.bbb_ts: LB1ItemData(base_item_id + 461, ItemClassification.filler),
    ItemName.utc_ts: LB1ItemData(base_item_id + 462, ItemClassification.filler),
    ItemName.zc_ts: LB1ItemData(base_item_id + 463, ItemClassification.filler),
    ItemName.pl_ts: LB1ItemData(base_item_id + 464, ItemClassification.filler),
    ItemName.jht_ts: LB1ItemData(base_item_id + 465, ItemClassification.filler),
    ItemName.lfabt_ts: LB1ItemData(base_item_id + 466, ItemClassification.filler),
    ItemName.fotb_ts: LB1ItemData(base_item_id + 467, ItemClassification.filler),
    ItemName.itdn_ts: LB1ItemData(base_item_id + 468, ItemClassification.filler),
    ItemName.tttot_ts: LB1ItemData(base_item_id + 469, ItemClassification.filler),
    ItemName.trmaw_ts: LB1ItemData(base_item_id + 470, ItemClassification.filler),
    ItemName.otr_ts: LB1ItemData(base_item_id + 471, ItemClassification.filler),
    ItemName.gf_ts: LB1ItemData(base_item_id + 472, ItemClassification.filler),
    ItemName.aet_ts: LB1ItemData(base_item_id + 473, ItemClassification.filler),
    ItemName.bb_ts: LB1ItemData(base_item_id + 474, ItemClassification.filler),
    ItemName.rtd_ts: LB1ItemData(base_item_id + 475, ItemClassification.filler),
    ItemName.sts_ts: LB1ItemData(base_item_id + 476, ItemClassification.filler),
    ItemName.hag_ts: LB1ItemData(base_item_id + 477, ItemClassification.filler),
    ItemName.adr_ts: LB1ItemData(base_item_id + 478, ItemClassification.filler),
    ItemName.aw_ts: LB1ItemData(base_item_id + 479, ItemClassification.filler),
    ItemName.asftc_ts: LB1ItemData(base_item_id + 480, ItemClassification.filler),
    ItemName.bbpl_ts: LB1ItemData(base_item_id + 481, ItemClassification.filler),
    ItemName.tjm_ts: LB1ItemData(base_item_id + 482, ItemClassification.filler),
    ItemName.tlotn_ts: LB1ItemData(base_item_id + 483, ItemClassification.filler),
    ItemName.dol_ts: LB1ItemData(base_item_id + 484, ItemClassification.filler),
}

red_brick_item_table: Dict[str, LB1ItemData] = {
    ItemName.ycbob_rbc: LB1ItemData(base_item_id + 485, ItemClassification.progression),
    ItemName.air_rbc: LB1ItemData(base_item_id + 486, ItemClassification.progression),
    ItemName.tfc_rbc: LB1ItemData(base_item_id + 487, ItemClassification.progression),
    ItemName.apa_rbc: LB1ItemData(base_item_id + 488, ItemClassification.progression),
    ItemName.tfo_rbc: LB1ItemData(base_item_id + 489, ItemClassification.progression),
    ItemName.tsga_rbc: LB1ItemData(base_item_id + 490, ItemClassification.progression),
    ItemName.bbb_rbc: LB1ItemData(base_item_id + 491, ItemClassification.progression),
    ItemName.utc_rbc: LB1ItemData(base_item_id + 492, ItemClassification.progression),
    ItemName.zc_rbc: LB1ItemData(base_item_id + 493, ItemClassification.progression),
    ItemName.pl_rbc: LB1ItemData(base_item_id + 494, ItemClassification.progression),
    ItemName.jht_rbc: LB1ItemData(base_item_id + 495, ItemClassification.progression),
    ItemName.lfabt_rbc: LB1ItemData(base_item_id + 496, ItemClassification.progression),
    ItemName.fotb_rbc: LB1ItemData(base_item_id + 497, ItemClassification.progression),
    ItemName.itdn_rbc: LB1ItemData(base_item_id + 498, ItemClassification.progression),
    ItemName.tttot_rbc: LB1ItemData(base_item_id + 499, ItemClassification.progression),
    ItemName.trmaw_rbc: LB1ItemData(base_item_id + 500, ItemClassification.progression),
    ItemName.otr_rbc: LB1ItemData(base_item_id + 501, ItemClassification.progression),
    ItemName.gf_rbc: LB1ItemData(base_item_id + 502, ItemClassification.progression),
    ItemName.aet_rbc: LB1ItemData(base_item_id + 503, ItemClassification.progression),
    ItemName.bb_rbc: LB1ItemData(base_item_id + 504, ItemClassification.progression),
    ItemName.rtd_rbc: LB1ItemData(base_item_id + 505, ItemClassification.progression),
    ItemName.sts_rbc: LB1ItemData(base_item_id + 506, ItemClassification.progression),
    ItemName.hag_rbc: LB1ItemData(base_item_id + 507, ItemClassification.progression),
    ItemName.adr_rbc: LB1ItemData(base_item_id + 508, ItemClassification.progression),
    ItemName.aw_rbc: LB1ItemData(base_item_id + 509, ItemClassification.progression),
    ItemName.asftc_rbc: LB1ItemData(base_item_id + 510, ItemClassification.progression),
    ItemName.bbpl_rbc: LB1ItemData(base_item_id + 511, ItemClassification.progression),
    ItemName.tjm_rbc: LB1ItemData(base_item_id + 512, ItemClassification.progression),
    ItemName.tlotn_rbc: LB1ItemData(base_item_id + 513, ItemClassification.progression),
    ItemName.dol_rbc: LB1ItemData(base_item_id + 514, ItemClassification.progression),
}

red_brick_unlocked_table: Dict[str, LB1ItemData] = {
    ItemName.silhouettes_un: LB1ItemData(base_item_id + 515, ItemClassification.filler),
    ItemName.beepbeep_un: LB1ItemData(base_item_id + 516, ItemClassification.filler),
    ItemName.icerink_un: LB1ItemData(base_item_id + 517, ItemClassification.filler),
    ItemName.disguise_un: LB1ItemData(base_item_id + 518, ItemClassification.filler),
    ItemName.extratoggle_un: LB1ItemData(base_item_id + 519, ItemClassification.filler),
    ItemName.scorex2_un: LB1ItemData(base_item_id + 520, ItemClassification.useful),
    ItemName.scorex4_un: LB1ItemData(base_item_id + 521, ItemClassification.useful),
    ItemName.scorex6_un: LB1ItemData(base_item_id + 522, ItemClassification.useful),
    ItemName.scorex8_un: LB1ItemData(base_item_id + 523, ItemClassification.useful),
    ItemName.scorex10_un: LB1ItemData(base_item_id + 524, ItemClassification.useful),
    ItemName.studmagnet_un: LB1ItemData(base_item_id + 525, ItemClassification.useful),
    ItemName.characterstuds_un: LB1ItemData(base_item_id + 526, ItemClassification.useful),
    ItemName.minikitdetector_un: LB1ItemData(base_item_id + 527, ItemClassification.useful),
    ItemName.powerbrickdetector_un: LB1ItemData(base_item_id + 528, ItemClassification.useful),
    ItemName.alwaysscore_un: LB1ItemData(base_item_id + 529, ItemClassification.useful),
    ItemName.fastbuild_un: LB1ItemData(base_item_id + 530, ItemClassification.useful),
    ItemName.freezeshield_un: LB1ItemData(base_item_id + 531, ItemClassification.useful),
    ItemName.regenhearts_un: LB1ItemData(base_item_id + 532, ItemClassification.useful),
    ItemName.extrahearts_un: LB1ItemData(base_item_id + 533, ItemClassification.useful),
    ItemName.invincibility_un: LB1ItemData(base_item_id + 534, ItemClassification.useful),
    ItemName.fastgrapple_un: LB1ItemData(base_item_id + 535, ItemClassification.useful),
    ItemName.fastbatarangs_un: LB1ItemData(base_item_id + 536, ItemClassification.useful),
    ItemName.moretargets_un: LB1ItemData(base_item_id + 537, ItemClassification.useful),
    ItemName.flamingbatarang_un: LB1ItemData(base_item_id + 538, ItemClassification.useful),
    ItemName.slam_un: LB1ItemData(base_item_id + 539, ItemClassification.useful),
    ItemName.moredetonators_un: LB1ItemData(base_item_id + 540, ItemClassification.useful),
    ItemName.armourplating_un: LB1ItemData(base_item_id + 541, ItemClassification.useful),
    ItemName.sonicpain_un: LB1ItemData(base_item_id + 542, ItemClassification.useful),
    ItemName.areaeffect_un: LB1ItemData(base_item_id + 543, ItemClassification.useful),
    ItemName.bats_un: LB1ItemData(base_item_id + 544, ItemClassification.filler),
    ItemName.freezebatarang_un: LB1ItemData(base_item_id + 545, ItemClassification.useful),
    ItemName.decoy_un: LB1ItemData(base_item_id + 546, ItemClassification.useful),
    ItemName.fastwalk_un: LB1ItemData(base_item_id + 547, ItemClassification.useful),
    ItemName.fasterpieces_un: LB1ItemData(base_item_id + 548, ItemClassification.useful),
    ItemName.piecedetector_un: LB1ItemData(base_item_id + 549, ItemClassification.useful),
}

item_data_table = {
    **character_item_table,
    **hard_character_item_table,
    **automobile_item_table,
    **watercraft_item_table,
    **aircraft_item_table,
    **suit_item_table,
    **minikit_item_table,
    **hostage_item_table,
    **level_unlocked_item_table,
    **true_status_item_table,
    **red_brick_item_table,
    **red_brick_unlocked_table,
}

item_group_table: Dict[str, Dict[str, LB1ItemData]] = {
    "character": character_item_table,
    "hard character": hard_character_item_table,
    "automobile": automobile_item_table,
    "watercraft": watercraft_item_table,
    "aircraft": aircraft_item_table,
    "suit": suit_item_table,
    "minikit": minikit_item_table,
    "hostage": hostage_item_table,
    "level": level_unlocked_item_table,
    "true status": true_status_item_table,
    "red brick collected": red_brick_item_table,
    "red brick unlocked": red_brick_unlocked_table,
}

minikit_names_set = set(minikit_item_table.keys())

event_item_table: Dict[str, LB1ItemData] = {
    # "Completed Wayne Manor": LB1ItemData(None, classification=ItemClassification.progression),
    # "Completed Arkham Asylum": LB1ItemData(None, classification=ItemClassification.progression),
    # "Completed All Levels": LB1ItemData(None, classification=ItemClassification.progression),
    "Obtain Minikit Goal": LB1ItemData(None, classification=ItemClassification.progression),
    # "Hush": LB1ItemData(None, classification=ItemClassification.progression),
    # "Ra Sha Guul": LB1ItemData(None, classification=ItemClassification.progression),
}


def setup_items(options: LB1Options):
    temp_item_table = {}
    if options.minikit_sanity == 1:
        temp_item_table.update({**minikit_item_table})
    if options.true_status_sanity == 1:
        temp_item_table.update({**true_status_item_table})
    temp_item_table.update({**character_item_table})
    temp_item_table.update({**hard_character_item_table})
    temp_item_table.update({**automobile_item_table})
    temp_item_table.update({**watercraft_item_table})
    temp_item_table.update({**aircraft_item_table})
    temp_item_table.update({**suit_item_table})
    temp_item_table.update({**hostage_item_table})
    temp_item_table.update({**level_unlocked_item_table})
    temp_item_table.update({**red_brick_item_table})
    temp_item_table.update({**red_brick_unlocked_table})
    return temp_item_table
